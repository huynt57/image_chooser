<?php

/**
 * This is the model base class for the table "tbl_posts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Posts".
 *
 * Columns in table "tbl_posts" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $post_id
 * @property string $post_content
 * @property integer $user_id
 * @property integer $status
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $post_like_count
 * @property integer $post_comment_count
 * @property integer $post_view_count
 * @property string $location
 *
 */
abstract class BasePosts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_posts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Posts|Posts', $n);
	}

	public static function representingColumn() {
		return 'post_content';
	}

	public function rules() {
		return array(
			array('user_id, status, created_at, updated_at, post_like_count, post_comment_count, post_view_count', 'numerical', 'integerOnly'=>true),
			array('location', 'length', 'max'=>255),
			array('post_content', 'safe'),
			array('post_content, user_id, status, created_at, updated_at, post_like_count, post_comment_count, post_view_count, location', 'default', 'setOnEmpty' => true, 'value' => null),
			array('post_id, post_content, user_id, status, created_at, updated_at, post_like_count, post_comment_count, post_view_count, location', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
                    'images'=>array(self::HAS_MANY, 'Images', 'img_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'post_id' => Yii::t('app', 'Post'),
			'post_content' => Yii::t('app', 'Post Content'),
			'user_id' => Yii::t('app', 'User'),
			'status' => Yii::t('app', 'Status'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'post_like_count' => Yii::t('app', 'Post Like Count'),
			'post_comment_count' => Yii::t('app', 'Post Comment Count'),
			'post_view_count' => Yii::t('app', 'Post View Count'),
			'location' => Yii::t('app', 'Location'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('post_content', $this->post_content, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('status', $this->status);
		$criteria->compare('created_at', $this->created_at);
		$criteria->compare('updated_at', $this->updated_at);
		$criteria->compare('post_like_count', $this->post_like_count);
		$criteria->compare('post_comment_count', $this->post_comment_count);
		$criteria->compare('post_view_count', $this->post_view_count);
		$criteria->compare('location', $this->location, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}